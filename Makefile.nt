#===============================================================================
#                Copyright Siemens PLM Software 2014. 
#                 Unpublished - All rights reserved
#===============================================================================
# File			: Makefile.nt
# Description	: Include Makefile
#===============================================================================
# Developer            Date            Description
# Mattias Jonsson      2014-04-14      Initial Version
#===============================================================================

#
# Newline macro
#
define NEWLINE


endef

#
# Include all paths to header files needed for compilation
#
INCLUDES= -I.  \
          "-I$(TC_ROOT)/include" \
          "-I$(TC_ROOT)/include_cpp" \
          "-I$(MSDEV_INCLUDE)" \
		  "-I$(USER_INCLUDE)" \
		  "-I../Utils"

#
# Include all the variables which are used in Makefiles
#
.SUFFIXES: .obj .cc .c .cxx
NT_LINK_EXT =	*.lib \
		*.pdb \
		*.exp \
		*.ilk \
		*.dll \
		*.manifest
OBJ_EXT=obj
LIB_EXT=lib
DLL_EXT=dll
PDB_EXT=pdb
MANIFEST_EXT=manifest
EXT=c
EXE=exe
CC=cl
LINK=link
ANT=ant
RM=rm -rf
CP=cp -R
MV=mv
CHMOD=chmod
MT=mt
MKDIR=mkdir
DOXYGEN=doxygen
DOXYGEN_CONFIG=./Doxygen
GEN_OBJS=*.obj *.filters *.user Debug obj Win32 x64 Utils.log Additions.log
		
#
# DEFINES and CFLAGS to compile the source code
#
## Determine x64 or x86 platform
ifeq ($(TC_PLATFORM),x86)
DEFINES=-DNT40 -DPOMDLL -DCRTAPI1=_cdecl -DCRTAPI2=cdecl -D_WIN32 \
		-DWIN32 -DWIN32_LEAN_AND_MEAN -DWNT -DBYPASS_FLEX -D_INTEL=1 \
		-DIPLIB=$(EXPIMP) -D_CRT_SECURE_NO_DEPRECATE -D_$(TC_VERSION)
else
DEFINES=-DSTEP -DAP203 -DAP214 -DWIN32_LEAN_AND_MEAN -DWNT \
       -D_CRT_SECURE_NO_DEPRECATE -D_CRT_NONSTDC_NO_DEPRECATE \
       -D_SECURE_SCL=0 -DWNT -D_WIN32 -DWIN32 \
       -D_WIN64 -D_INTEL=1 -DCRTAPI1=_cdecl -DCRTAPI2=cdecl \
	   -DIMAN_TAO -DBYPASS_FLEX -DPOMDLL \
	   -DIPLIB=$(EXPIMP) -D_$(TC_VERSION)
endif

## Determine release- or debug build
##ifeq (,$(findstring debug,$(MAKECMDGOALS)))
ifeq ($(MAKECMDGOALS),debug)
CFLAGS=-c -nologo -EHsc -W1 -Od -Zi -MDd
DEFINES+=-D_DEBUG
else
CFLAGS=-c -nologo -EHsc -W1 -Ox -Oy- -MD
DEFINES+=-DNDEBUG
endif

#
# Build commands definition
#
.cc.obj:
	$(CC) $(CFLAGS) $(INCLUDES) $(DEFINES) $<
.c.obj:
	$(CC) $(CFLAGS) $(INCLUDES) $(DEFINES) $<
.cxx.obj:
	$(CC) $(CFLAGS) $(INCLUDES) $(DEFINES) $<

#
# DLL flags definition
#
DLLFLAGS = -debug \
			-nologo \
			-subsystem:console \
			-MANIFEST

## Determine if x64 platform
ifeq ($(TC_PLATFORM),x64)
DLLFLAGS+=-MACHINE:X64
endif

#
# Platform dependent libraries
#
## Determine of release- or debug build
##ifeq (,$(findstring debug,$(MAKECMDGOALS)))
ifeq ($(MAKECMDGOALS),debug)
SYSLIBS = wsock32.lib \
          advapi32.lib \
          msvcrtd.lib \
          oldnames.lib \
          kernel32.lib \
          winmm.lib
else
SYSLIBS = wsock32.lib \
          advapi32.lib \
          msvcrt.lib \
          oldnames.lib \
          kernel32.lib \
          winmm.lib
endif

#
# Additional object file for linking Teamcenter standalone utility
#
TC_UTIL_LIBS=$(TC_LIBRARY)/itk_main.obj

#
# Common Teamcenter libraries
#
TC_LIBS=$(TC_LIBRARY)/*.lib

ifeq ($(TC_VERSION),TC_9)
DELAYLOAD=/delayload:libuser_exits.dll \
			/delayload:libict.dll \
			/delayload:libae.dll \
			/delayload:libappr.dll \
			/delayload:libarchive.dll \
			/delayload:libbackup.dll \
			/delayload:libbom.dll \
			/delayload:libcfm.dll \
			/delayload:libdmi.dll \
			/delayload:libecm.dll \
			/delayload:libeint.dll \
			/delayload:libepm.dll \
			/delayload:libform.dll \
			/delayload:libgrm.dll \
			/delayload:libics.dll \
			/delayload:libtccore.dll \
			/delayload:libtctrushape.dll \
			/delayload:libinternal_exits.dll \
			/delayload:libvalidation.dll \
			/delayload:libitk.dll \
			/delayload:liblov.dll \
			/delayload:libme.dll \
			/delayload:libmechatronics.dll \
			/delayload:libmgc.dll \
			/delayload:libobjio.dll \
			/delayload:libpie.dll \
			/delayload:libai.dll \
			/delayload:libtie.dll \
			/delayload:libproperty.dll \
			/delayload:libps.dll \
			/delayload:libpublication.dll \
			/delayload:libqry.dll \
			/delayload:libres.dll \
			/delayload:libsub_mgr.dll \
			/delayload:libtccoreext.dll \
			/delayload:libnxmgr_im.dll \
			/delayload:libmld.dll
endif

ifeq ($(TC_VERSION),TC_10)
DELAYLOAD=/delayload:libuser_exits.dll \
			/delayload:libict.dll \
			/delayload:libae.dll \
			/delayload:libappr.dll \
			/delayload:libarchive.dll \
			/delayload:libbackup.dll \
			/delayload:libbom.dll \
			/delayload:libcfm.dll \
			/delayload:libdmi.dll \
			/delayload:libecm.dll \
			/delayload:libeint.dll \
			/delayload:libepm.dll \
			/delayload:libform.dll \
			/delayload:libgrm.dll \
			/delayload:libics.dll \
			/delayload:libtccore.dll \
			/delayload:libtctrushape.dll \
			/delayload:libinternal_exits.dll \
			/delayload:libvalidation.dll \
			/delayload:libcondvalidation.dll \
			/delayload:libitk.dll \
			/delayload:liblov.dll \
			/delayload:libme.dll \
			/delayload:libmechatronics.dll \
			/delayload:libmgc.dll \
			/delayload:libobjio.dll \
			/delayload:libpie.dll \
			/delayload:libai.dll \
			/delayload:libtie.dll \
			/delayload:libproperty.dll \
			/delayload:libps.dll \
			/delayload:libpublication.dll \
			/delayload:libqry.dll \
			/delayload:libres.dll \
			/delayload:libsub_mgr.dll \
			/delayload:libtccoreext.dll \
			/delayload:libnxmgr_im.dll \
			/delayload:libfoundationbase.dll \
			/delayload:libmld.dll
endif

#
# Link definition for custom Teamcenter libraries
#
LINK_LINE= $(LINK) $(DLLFLAGS) \
           -dll \
           -out:$(EXPIMP).$(DLL_EXT) \
           $(ALL_LIB_OBJS) \
           $(SYSLIBS) /ignore:4199 delayimp.lib \
           $(TC_LIBS) \
           $(DEP_LIBS) \
		   $(DELAYLOAD)
		   
#
# Link definition for custom standalone Teamcenter utilities
#
LINK_LINE_UTIL= $(LINK) $(DLLFLAGS) \
				$(ALL_LIB_OBJS) \
				$(SYSLIBS) /ignore:4199 delayimp.lib \
				$(TC_UTIL_LIBS) \
				$(TC_LIBS) \
				$(DEP_LIBS) \
				$(DELAYLOAD) \
				-out:$(UTIL_EXE)

#
# Add manifest information
#
MANIFEST_LINE= $(MT) -manifest $(EXPIMP).$(DLL_EXT).$(MANIFEST_EXT) -outputresource:$(EXPIMP).$(DLL_EXT);2
MANIFEST_LINE_UTIL= $(MT) -manifest $(UTIL_EXE).$(MANIFEST_EXT) -outputresource:$(UTIL_EXE);1
